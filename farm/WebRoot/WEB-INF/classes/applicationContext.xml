<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"	
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<description>Spring公共配置 </description>

	<context:component-scan base-package="cn.jxufe" use-default-filters="true"/>
	<context:annotation-config />

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>
			<bean
				class="org.springframework.http.converter.ResourceHttpMessageConverter"></bean>
			<bean
				class="org.springframework.http.converter.xml.SourceHttpMessageConverter"></bean>
			<bean
				class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"></bean>
		</mvc:message-converters>

	</mvc:annotation-driven>

	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
	<mvc:default-servlet-handler />

	<!-- 定义JSP文件的位置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/template/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/error/500" />
	
	<!-- 数据库配置文件 -->
 	<context:property-placeholder ignore-unresolvable="true" location="classpath*:/jdbc.properties" />	
 	
 	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <property name="defaultEncoding" value="UTF-8" />  
	    <!-- 指定所上传文件的总大小不能超过1MB。maxUploadSize是所有文件的容量之和 -->  
	    <property name="maxUploadSize" value="1024000"/>  
	</bean> 
	
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
		<!-- Spring Data Jpa配置 , 扫描base-package下所有继承于Repository<T,ID>的接口-->
	 	<jpa:repositories base-package="cn.jxufe"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
	
		<!-- Jpa Entity Manager 配置 -->
		<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="dataSource"> 
			<property name="dataSource" ref="dataSource"/>
			<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
			<!-- 加入定制化包路径com.sample -->
			<property name="packagesToScan" value="cn.jxufe"/>
			<property name="jpaProperties">
				<props>
					 
					<prop key="hibernate.hbm2ddl.auto">none</prop>
					
					<prop key="hibernate.current_session_context_class">thread</prop>
					
					<!-- 抓取策略 -->
					<prop key="hibernate.max_fetch_depth">1</prop>
					<prop key="hibernate.default_batch_fetch_size">4</prop>
					<prop key="hibernate.jdbc.fetch_size">30</prop>
					<prop key="hibernate.jdbc.batch_size">50</prop>					
					
					<!-- 建表的命名规则 -->
					<prop key="hibernate.ejb.naming_strategy">cn.jxufe.system.db.SqlServer</prop>
					
					<!-- 用于调试的属性 -->
					<!-- -->
					<prop key="hibernate.format_sql">true</prop>
		
					
					<prop key="hibernate.generate_statistics">true</prop>
					<prop key="hibernate.use_sql_comments">true</prop>
					<prop key="hibernate.show_sql">true</prop>
	    			<prop key="hibernate.format_sql">true</prop>
				 
					<!-- end 用于调试的属性 -->			
				</props>
			</property>
		</bean>
		
		<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			<property name="databasePlatform" value="${hibernate.dialect}"/>
		</bean>
		
		<!-- 事务管理器配置, Jpa单数据源事务 -->
		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
			<property name="entityManagerFactory" ref="entityManagerFactory"/>
		</bean>
		
		<!-- 使用annotation定义事务 -->
		<tx:annotation-driven transaction-manager="transactionManager"/>
		
		<!-- 数据源配置, 使用DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${dbcp.maxActive}" />
			<property name="maxIdle" value="${dbcp.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>	
		
		<mvc:interceptors>
			<mvc:interceptor>
				<mvc:mapping path="/shop/**"/>
				<mvc:mapping path="/repository/**"/>
				<mvc:mapping path="/plant/**"/>
				<bean id="commonInterceptor" class="cn.jxufe.interceptor.AuthInterceptor"></bean>
			</mvc:interceptor>
		</mvc:interceptors>
		
		<bean id="webSocket" class="cn.jxufe.websocket.FarmActionHandler"/> 
      	<websocket:handlers>  
            <websocket:mapping path="/fuck/action" handler="webSocket"/>  
            <websocket:handshake-interceptors>  
                <bean class="cn.jxufe.websocket.FarmActionInterceptor"/>  
            </websocket:handshake-interceptors>  
		</websocket:handlers> 
</beans>